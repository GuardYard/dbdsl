/**
 * generated by Xtext 2.23.0
 */
package org.xtext.miniproject2.dbscript.dsl.dbDSL.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.miniproject2.dbscript.dsl.dbDSL.DbDSLPackage;
import org.xtext.miniproject2.dbscript.dsl.dbDSL.PrimaryKey;
import org.xtext.miniproject2.dbscript.dsl.dbDSL.Type;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Primary Key</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.miniproject2.dbscript.dsl.dbDSL.impl.PrimaryKeyImpl#getAutoIncrement <em>Auto Increment</em>}</li>
 * </ul>
 *
 * @generated
 */
public class PrimaryKeyImpl extends AbstractTypeImpl implements PrimaryKey
{
  /**
   * The default value of the '{@link #getAutoIncrement() <em>Auto Increment</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAutoIncrement()
   * @generated
   * @ordered
   */
  protected static final Type AUTO_INCREMENT_EDEFAULT = Type.INTEGER;

  /**
   * The cached value of the '{@link #getAutoIncrement() <em>Auto Increment</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAutoIncrement()
   * @generated
   * @ordered
   */
  protected Type autoIncrement = AUTO_INCREMENT_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected PrimaryKeyImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DbDSLPackage.Literals.PRIMARY_KEY;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Type getAutoIncrement()
  {
    return autoIncrement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAutoIncrement(Type newAutoIncrement)
  {
    Type oldAutoIncrement = autoIncrement;
    autoIncrement = newAutoIncrement == null ? AUTO_INCREMENT_EDEFAULT : newAutoIncrement;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DbDSLPackage.PRIMARY_KEY__AUTO_INCREMENT, oldAutoIncrement, autoIncrement));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DbDSLPackage.PRIMARY_KEY__AUTO_INCREMENT:
        return getAutoIncrement();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DbDSLPackage.PRIMARY_KEY__AUTO_INCREMENT:
        setAutoIncrement((Type)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DbDSLPackage.PRIMARY_KEY__AUTO_INCREMENT:
        setAutoIncrement(AUTO_INCREMENT_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DbDSLPackage.PRIMARY_KEY__AUTO_INCREMENT:
        return autoIncrement != AUTO_INCREMENT_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (autoIncrement: ");
    result.append(autoIncrement);
    result.append(')');
    return result.toString();
  }

} //PrimaryKeyImpl
