/**
 * generated by Xtext 2.23.0
 */
package org.xtext.miniproject2.dbscript.dsl.dbDSL.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.miniproject2.dbscript.dsl.dbDSL.Column;
import org.xtext.miniproject2.dbscript.dsl.dbDSL.DbDSLPackage;
import org.xtext.miniproject2.dbscript.dsl.dbDSL.Table;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Column</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.miniproject2.dbscript.dsl.dbDSL.impl.ColumnImpl#getSourceTable <em>Source Table</em>}</li>
 *   <li>{@link org.xtext.miniproject2.dbscript.dsl.dbDSL.impl.ColumnImpl#getFkey <em>Fkey</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ColumnImpl extends AbstractTypeImpl implements Column
{
  /**
   * The cached value of the '{@link #getSourceTable() <em>Source Table</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSourceTable()
   * @generated
   * @ordered
   */
  protected Table sourceTable;

  /**
   * The default value of the '{@link #getFkey() <em>Fkey</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFkey()
   * @generated
   * @ordered
   */
  protected static final String FKEY_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getFkey() <em>Fkey</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFkey()
   * @generated
   * @ordered
   */
  protected String fkey = FKEY_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ColumnImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DbDSLPackage.Literals.COLUMN;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Table getSourceTable()
  {
    if (sourceTable != null && sourceTable.eIsProxy())
    {
      InternalEObject oldSourceTable = (InternalEObject)sourceTable;
      sourceTable = (Table)eResolveProxy(oldSourceTable);
      if (sourceTable != oldSourceTable)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, DbDSLPackage.COLUMN__SOURCE_TABLE, oldSourceTable, sourceTable));
      }
    }
    return sourceTable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Table basicGetSourceTable()
  {
    return sourceTable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSourceTable(Table newSourceTable)
  {
    Table oldSourceTable = sourceTable;
    sourceTable = newSourceTable;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DbDSLPackage.COLUMN__SOURCE_TABLE, oldSourceTable, sourceTable));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getFkey()
  {
    return fkey;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFkey(String newFkey)
  {
    String oldFkey = fkey;
    fkey = newFkey;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DbDSLPackage.COLUMN__FKEY, oldFkey, fkey));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DbDSLPackage.COLUMN__SOURCE_TABLE:
        if (resolve) return getSourceTable();
        return basicGetSourceTable();
      case DbDSLPackage.COLUMN__FKEY:
        return getFkey();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DbDSLPackage.COLUMN__SOURCE_TABLE:
        setSourceTable((Table)newValue);
        return;
      case DbDSLPackage.COLUMN__FKEY:
        setFkey((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DbDSLPackage.COLUMN__SOURCE_TABLE:
        setSourceTable((Table)null);
        return;
      case DbDSLPackage.COLUMN__FKEY:
        setFkey(FKEY_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DbDSLPackage.COLUMN__SOURCE_TABLE:
        return sourceTable != null;
      case DbDSLPackage.COLUMN__FKEY:
        return FKEY_EDEFAULT == null ? fkey != null : !FKEY_EDEFAULT.equals(fkey);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (fkey: ");
    result.append(fkey);
    result.append(')');
    return result.toString();
  }

} //ColumnImpl
